{"version":3,"file":"static/js/555.8cb9a579.chunk.js","mappings":"wOACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAAkG,gCAAlG,EAAwI,0BAAxI,EAA0K,4BAA1K,EAA+M,6BAA/M,EAAwP,gCAAxP,EAAgS,4B,uCCgGhS,EA3FqB,WACjB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,MAAf,IAG1BI,EAAoB,SAAAC,GACI,SAAtBA,EAAMC,OAAOd,MACbC,EAAQY,EAAMC,OAAOC,OAEC,UAAtBF,EAAMC,OAAOd,MACbG,EAASU,EAAMC,OAAOC,OAEA,aAAtBF,EAAMC,OAAOd,MACbK,EAAYQ,EAAMC,OAAOC,MAEhC,EAEKC,EAAY,mCAAG,WAAOH,GAAP,wEACjBA,EAAMI,iBADW,SAEXX,GAASY,EAAAA,EAAAA,IAAc,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAF3B,OAGF,qBAAXI,IACAP,EAAQ,IACRE,EAAS,IACTE,EAAY,KANC,2CAAH,sDAalB,OACI,iBAAKc,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,uBACA,kBAAMD,UAAWC,EAAUC,SAAUL,EAArC,WACI,mBAAOG,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,mBACA,kBACID,UAAWC,EACXE,SAAUV,EACVG,MAAOf,EACPuB,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIhB,mBAAOP,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,oBACA,kBACID,UAAWC,EACXE,SAAUV,EACVG,MAAOb,EACPqB,KAAK,QACLvB,KAAK,QACL0B,UAAQ,QAGhB,mBAAOP,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,uBACA,kBACID,UAAWC,EACXE,SAAUV,EACVG,MAAOX,EACPmB,KAAK,WACLvB,KAAK,WACL0B,UAAQ,QAIhB,oBAAQH,KAAK,SAASJ,UAAWC,EAAjC,qBAEgB,YAAXZ,IAAyB,gBAAKW,UAAWC,EAAhB,UACtB,SAAC,KAAD,CACIO,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,cAQpC,C","sources":["webpack://react-homework-template/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterView_form__q9n4X\",\"label\":\"RegisterView_label__Aacwx\",\"inputName\":\"RegisterView_inputName__RKbyr\",\"btn\":\"RegisterView_btn__ZUIxa\",\"input\":\"RegisterView_input__UcX6h\",\"Loader\":\"RegisterView_Loader__e7C+T\",\"container\":\"RegisterView_container__pHXaJ\",\"title\":\"RegisterView_title__fF0wn\"};","import React, { useState } from 'react';\nimport css from './RegisterView.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUsers } from '../../redux/auth/auth-operations'\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst RegisterView = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const status = useSelector(state => state.auth.status);\n\n\n    const handleChangeInput = event => {\n        if (event.target.name === 'name') {\n            setName(event.target.value)\n        }\n        if (event.target.name === 'email') {\n            setEmail(event.target.value)\n        }\n        if (event.target.name === 'password') {\n            setPassword(event.target.value)\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        await dispatch(registerUsers({ name, email, password }));\n        if (status === 'fulfilledAddUser') {\n            setName('')\n            setEmail('')\n            setPassword('')\n        }\n    };\n\n\n\n\n    return (\n        <div className={css.container}>\n            <p className={css.title}>REGISTER</p>\n            <form className={css.form} onSubmit={handleSubmit}>\n                <label className={css.label}>\n                    <span className={css.inputName}>Name</span>\n                    <input\n                        className={css.input}\n                        onChange={handleChangeInput}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n\n                <label className={css.label}>\n                    <span className={css.inputName}>Email</span>\n                    <input\n                        className={css.input}\n                        onChange={handleChangeInput}\n                        value={email}\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                    />\n                </label>\n                <label className={css.label}>\n                    <span className={css.inputName}>Password</span>\n                    <input\n                        className={css.input}\n                        onChange={handleChangeInput}\n                        value={password}\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                </label>\n\n                <button type=\"submit\" className={css.btn}>REGISTER\n\n                    {status === 'addUser' && (<div className={css.Loader}>\n                        <RotatingLines\n                            strokeColor=\"white\"\n                            strokeWidth=\"5\"\n                            animationDuration=\"0.75\"\n                            width=\"20\"\n                            visible={true}\n                        />\n                    </div>)}\n\n                </button>\n            </form>\n        </div>\n    );\n}\nexport default RegisterView"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","status","useSelector","state","auth","handleChangeInput","event","target","value","handleSubmit","preventDefault","registerUsers","className","css","onSubmit","onChange","type","pattern","title","required","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}