{"version":3,"file":"static/js/233.e475c393.chunk.js","mappings":"2MACA,EAAgC,mCAAhC,EAA0E,0BAA1E,EAA4G,2BAA5G,EAAmJ,+BAAnJ,EAAwL,yBAAxL,EAAyN,2BAAzN,EAA6P,4B,0DCMhPA,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,KAAnB,IACzBI,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,MAAnB,IAE1BC,EAAoB,SAAAC,GACE,SAAtBA,EAAMC,OAAOb,MACfC,EAAQW,EAAMC,OAAOC,OAEG,WAAtBF,EAAMC,OAAOb,MACfG,EAAUS,EAAMC,OAAOC,MAE1B,EAsBD,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUC,SAtBD,SAAAL,GAC5BA,EAAMM,iBACN,IAAMC,EAAiBnB,EAAKoB,cACTd,EAAMe,MACvB,SAAAC,GAAI,OAAIA,EAAKtB,KAAKoB,gBAAkBD,CAAhC,IAGJI,IAAAA,OAAAA,QAAA,UAA2BvB,EAA3B,6BAGFI,GAASoB,EAAAA,EAAAA,IACP,CACExB,KAAAA,EACAE,OAAAA,KAEJD,EAAQ,IACRE,EAAU,IACX,EAKG,WACE,mBAAOY,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,mBACA,kBACED,UAAWC,EACXS,SAAUd,EACVG,MAAOd,EACP0B,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,mBAAOd,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,qBACA,kBACED,UAAWC,EACXS,SAAUd,EACVG,MAAOZ,EACPwB,KAAK,MACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,oBAAQH,KAAK,SAASX,UAAWC,EAAjC,0BAAmE,QAAXN,IAAqB,gBAAKK,UAAWC,EAAhB,UAC3E,SAAC,KAAD,CACEc,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,MANb,WAYP,ECrFD,EAAkC,gCAAlC,EAAyE,qBAAzE,EAA4G,4BAA5G,EAAgJ,sB,UCKnIC,EAAS,WACpB,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAS7B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS2B,MAAnB,IAMhC,OACE,gBAAKrB,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,oCACA,kBACED,UAAWC,EACXS,SAVwB,SAAAb,GAC9BR,GAASiC,EAAAA,EAAAA,GAAazB,EAAMC,OAAOC,OACpC,EASOA,MAAOsB,EACPV,KAAK,OACL1B,KAAK,SACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAKjB,EC9BD,EAAuB,sBAAvB,EAAmD,qBAAnD,EAAsF,6BAAtF,EAAmI,+BAAnI,EAA2K,wBAA3K,EAA+M,2BCMlMS,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBnC,GAAWC,EAAAA,EAAAA,MACXK,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,MAAnB,IAChC,OACE,gBAAIK,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,UAAmCuB,EAAQvC,KAA3C,SACA,iBAAKe,UAAWC,EAAhB,WACE,iBAAMD,UAAWC,EAAjB,SAAqCuB,EAAQrC,UAC7C,oBACEwB,KAAK,SACLc,QAAS,kBAAMpC,GAASqC,EAAAA,EAAAA,IAAkBF,EAAQG,IAAzC,EACT3B,UAAWC,EAHb,mBAMGN,IAAW6B,EAAQG,KAAO,gBAAK3B,UAAWC,EAAhB,UACzB,SAAC,KAAD,CACEc,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,cAOtB,ECjCD,EAA8B,iCCIjBS,EAAc,WACzB,IAAMrC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,KAAnB,IACzB8B,GAAS7B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS2B,MAAnB,IAC1B1B,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,MAAnB,IAC1BkC,EAAkBR,EAAOhB,cACzByB,EAAiBvC,EAAM8B,QAAO,YAClC,OADgD,EAAXpC,KACzBoB,cAAc0B,SAASF,EACpC,IAED,OACE,eAAI7B,UAAWC,EAAf,SACG6B,EAAeE,OAAS,EACtBF,EAAeG,KAAI,SAAA1B,GAAI,OACtB,SAACgB,EAAD,CAEEC,QAASjB,GADJA,EAAKoB,GAFU,KAMrBhC,IAAU,mDAGpB,ECzBD,EAAqC,yCAArC,EAAsF,4BAAtF,EAA2H,6BCuC3H,EA/BqB,WACjB,IAAMA,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,MAAnB,IAC1BuC,GAAa1C,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0C,KAAKxC,MAAf,IAC9BJ,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,KAAnB,IAC/B6C,QAAQC,IAAI9C,GACZ,IAAMF,GAAWC,EAAAA,EAAAA,MAMjB,OAJAgD,EAAAA,EAAAA,YAAU,WACNjD,GAASkD,EAAAA,EAAAA,MACZ,GAAE,CAAClD,EAAU6C,KAGV,iBAAKlC,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,wBACA,SAAClB,EAAD,KACA,eAAIiB,UAAWC,EAAf,uBACA,SAACmB,EAAD,IACY,UAAXzB,GAAuC,IAAjBJ,EAAMyC,SAAiB,gBAAKhC,UAAWC,EAAhB,UAC1C,SAAC,KAAD,CACIc,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,MAGD,gBAAfe,IAAgC,SAACN,EAAD,MAG5C,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/Contact/Contact.module.css?41f4","components/ContactList/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/views/ContactsView/ContactsView.module.css?919f","views/ContactsView/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cartInputForm\":\"ContactForm_cartInputForm__RueJS\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"inputName\":\"ContactForm_inputName__a8jFO\",\"btn\":\"ContactForm_btn__wll+u\",\"input\":\"ContactForm_input__Bl93P\",\"Loader\":\"ContactForm_Loader__3JC3W\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notiflix from 'notiflix';\nimport { CreateContact } from '../../redux/contacts/contacts-operations'\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.contacts.items)\n  const status = useSelector(state => state.contacts.status);\n\n  const handleChangeInput = event => {\n    if (event.target.name === 'name') {\n      setName(event.target.value)\n    }\n    if (event.target.name === 'number') {\n      setNumber(event.target.value)\n    }\n  };\n\n  const handleSubmitInputName = event => {\n    event.preventDefault();\n    const nameNormalized = name.toLowerCase();\n    const dobbleName = items.find(\n      item => item.name.toLowerCase() === nameNormalized\n    );\n    if (dobbleName) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n      return\n    }\n    dispatch(CreateContact(\n      {\n        name,\n        number,\n      }));\n    setName('')\n    setNumber('')\n  };\n\n\n  return (\n    <div className={css.cartInputForm}>\n      <form className={css.form} onSubmit={handleSubmitInputName}>\n        <label className={css.label}>\n          <span className={css.inputName}>Name</span>\n          <input\n            className={css.input}\n            onChange={handleChangeInput}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={css.label}>\n          <span className={css.inputName}>Number</span>\n          <input\n            className={css.input}\n            onChange={handleChangeInput}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.btn}>add contact  {status === 'add' && (<div className={css.Loader}>\n          <RotatingLines\n            strokeColor=\"white\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"20\"\n            visible={true}\n          />\n        </div>)} </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"text\":\"Filter_text__uqQRu\",\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n\n  const handleChangeInputFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filterContainer}>\n      <label className={css.labelFilter}>\n        <span className={css.text}>Find contacts by name</span>\n        <input\n          className={css.input}\n          onChange={handleChangeInputFilter}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__LgFs2\",\"btn\":\"Contact_btn__fArF3\",\"contactName\":\"Contact_contactName__FiyYe\",\"contactNumber\":\"Contact_contactNumber__wugT8\",\"Loader\":\"Contact_Loader__zQh6B\",\"container\":\"Contact_container__CIvJU\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUserContact } from '../../../redux/contacts/contacts-operations';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.contacts.status);\n  return (\n    <li className={css.item}>\n      <span className={css.contactName}>{contact.name}: </span>\n      <div className={css.container}>\n        <span className={css.contactNumber}>{contact.number}</span>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(deleteUserContact(contact.id))}\n          className={css.btn}\n        >\n          Delete\n          {status === contact.id && (<div className={css.Loader}>\n            <RotatingLines\n              strokeColor=\"white\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"20\"\n              visible={true}\n            />\n          </div>)}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactList_contactList__rfM1N\",\"Loader\":\"contactList_Loader__oxo2x\"};","import { Contact } from 'components/ContactList/Contact/Contact';\nimport css from './contactList.module.css';\nimport { useSelector } from \"react-redux\";\nimport React from 'react';\n\nexport const ContactList = () => {\n  const items = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const status = useSelector(state => state.contacts.status)\n  const FilterNormalize = filter.toLowerCase();\n  const filterContacts = items.filter(({ name }) => {\n    return name.toLowerCase().includes(FilterNormalize)\n  })\n\n  return (\n    <ul className={css.contactList}>\n      {filterContacts.length > 0 ?\n        (filterContacts.map(item => (\n          <Contact\n            key={item.id}\n            contact={item}\n          />\n        )))\n        : !status && <p>You dont have contacts</p>}\n    </ul>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"ContactsView_phonebookContainer__tzyL9\",\"title\":\"ContactsView_title__ATNZX\",\"Loader\":\"ContactsView_Loader__LB4C0\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport React, { useEffect } from 'react';\nimport { getAllContactsUser } from '../../redux/contacts/contacts-operations'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RotatingLines } from 'react-loader-spinner';\nimport css from './ContactsView.module.css';\n\nconst ContactsView = () => {\n    const status = useSelector(state => state.contacts.status);\n    const userStatus = useSelector(state => state.auth.status);\n    const items = useSelector(state => state.contacts.items);\n    console.log(items);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllContactsUser())\n    }, [dispatch, userStatus])\n\n    return (\n        <div className={css.phonebookContainer}>\n            <h1 className={css.title}>Phonebook</h1>\n            <ContactForm />\n            <h2 className={css.title}>Contacts</h2>\n            <Filter />\n            {status === 'fetch' && items.length === 0 && (<div className={css.Loader}>\n                <RotatingLines\n                    strokeColor=\"white\"\n                    strokeWidth=\"5\"\n                    animationDuration=\"0.75\"\n                    width=\"150\"\n                    visible={true}\n                />\n            </div>)}\n            {userStatus !== 'refreshUser' && <ContactList />}\n        </div>\n    )\n}\n\nexport default ContactsView "],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","items","useSelector","state","contacts","status","handleChangeInput","event","target","value","className","css","onSubmit","preventDefault","nameNormalized","toLowerCase","find","item","Notiflix","CreateContact","onChange","type","pattern","title","required","strokeColor","strokeWidth","animationDuration","width","visible","Filter","filter","changeFilter","Contact","contact","onClick","deleteUserContact","id","ContactList","FilterNormalize","filterContacts","includes","length","map","userStatus","auth","console","log","useEffect","getAllContactsUser"],"sourceRoot":""}